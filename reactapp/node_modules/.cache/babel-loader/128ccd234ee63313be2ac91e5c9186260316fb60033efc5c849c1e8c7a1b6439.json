{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\new\\\\New folder\\\\reactapp\\\\src\\\\Components\\\\Form\\\\FormSignin.js\";\nimport React from \"react\";\nimport { Button, Checkbox, Form, Input } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst onFinish = values => {\n  console.log('Success:', values);\n};\nconst onFinishFailed = errorInfo => {\n  console.log('Failed:', errorInfo);\n};\nconst FormSignin = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      name: \"basic\",\n      labelCol: {\n        span: 8\n      },\n      wrapperCol: {\n        span: 16\n      },\n      style: {\n        maxWidth: 600\n      },\n      initialValues: {\n        remember: true\n      },\n      onFinish: onFinish,\n      onFinishFailed: onFinishFailed,\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Username\",\n        name: \"username\",\n        rules: [{\n          required: true,\n          message: 'Please input your username!'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Password\",\n        name: \"password\",\n        rules: [{\n          required: true,\n          message: 'Please input your password!'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"remember\",\n        valuePropName: \"checked\",\n        wrapperCol: {\n          offset: 8,\n          span: 16\n        },\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          children: \"Remember me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        wrapperCol: {\n          offset: 8,\n          span: 16\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 10\n    }, this)\n  }, void 0, false);\n};\n_c = FormSignin;\nexport default FormSignin;\nvar _c;\n$RefreshReg$(_c, \"FormSignin\");","map":{"version":3,"names":["React","Button","Checkbox","Form","Input","jsxDEV","_jsxDEV","Fragment","_Fragment","onFinish","values","console","log","onFinishFailed","errorInfo","FormSignin","children","name","labelCol","span","wrapperCol","style","maxWidth","initialValues","remember","autoComplete","Item","label","rules","required","message","fileName","_jsxFileName","lineNumber","columnNumber","Password","valuePropName","offset","type","htmlType","_c","$RefreshReg$"],"sources":["C:/Users/user/Documents/new/New folder/reactapp/src/Components/Form/FormSignin.js"],"sourcesContent":["import React from \"react\";\r\nimport { Button, Checkbox, Form, Input } from 'antd';\r\nconst onFinish = (values) => {\r\n  console.log('Success:', values);\r\n};\r\nconst onFinishFailed = (errorInfo) => {\r\n  console.log('Failed:', errorInfo);\r\n};\r\n\r\nconst FormSignin = () => {\r\n    return(\r\n        <>\r\n         <Form\r\n    name=\"basic\"\r\n    labelCol={{\r\n      span: 8,\r\n    }}\r\n    wrapperCol={{\r\n      span: 16,\r\n    }}\r\n    style={{\r\n      maxWidth: 600,\r\n    }}\r\n    initialValues={{\r\n      remember: true,\r\n    }}\r\n    onFinish={onFinish}\r\n    onFinishFailed={onFinishFailed}\r\n    autoComplete=\"off\"\r\n  >\r\n    <Form.Item\r\n      label=\"Username\"\r\n      name=\"username\"\r\n      rules={[\r\n        {\r\n          required: true,\r\n          message: 'Please input your username!',\r\n        },\r\n      ]}\r\n    >\r\n      <Input />\r\n    </Form.Item>\r\n\r\n    <Form.Item\r\n      label=\"Password\"\r\n      name=\"password\"\r\n      rules={[\r\n        {\r\n          required: true,\r\n          message: 'Please input your password!',\r\n        },\r\n      ]}\r\n    >\r\n      <Input.Password />\r\n    </Form.Item>\r\n\r\n    <Form.Item\r\n      name=\"remember\"\r\n      valuePropName=\"checked\"\r\n      wrapperCol={{\r\n        offset: 8,\r\n        span: 16,\r\n      }}\r\n    >\r\n      <Checkbox>Remember me</Checkbox>\r\n    </Form.Item>\r\n\r\n    <Form.Item\r\n      wrapperCol={{\r\n        offset: 8,\r\n        span: 16,\r\n      }}\r\n    >\r\n      <Button type=\"primary\" htmlType=\"submit\">\r\n        Submit\r\n      </Button>\r\n    </Form.Item>\r\n  </Form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FormSignin;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}